@model LeaveSystemMVC.Models.sEmployeeModel
@Html.Partial("_LeftMenu")
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<div class="col-md-10">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h2>New Staff Member</h2>
            <hr />
            @if (ViewBag.SuccessMessage != null)
            {
                <script>
                    $(document).ready(function ()
                    {
                    alert('@ViewBag.SuccessMessage');
                    });
                </script>
            }
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <table style="width:35%;"><tr>
           <td><div class="form-horizontal "style="white-space:nowrap">
                @Html.LabelFor(model => model.staffID, "Staff ID", htmlAttributes: new { @class = "control-label col-md-1" })
                </div></td><td><div class="col-md-2">
                    @Html.TextBoxFor(model => model.staffID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.staffID, "", new { @class = "text-danger" })
                </div>
            </td>
</tr></table>
            <hr />
            <table style="width:70%;"><tr>
                <td><div class="form-horizontal"style="white-space:nowrap">
                    @Html.LabelFor(model => model.firstName, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div></td>
                <td><div class="form-inline">
                        @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                    </div>
                </td>
            

            <td><div class="form-horizontal">
                @Html.LabelFor(model => model.lastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                </div></td>
                <td><div class="form-inline">
                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                </div>
            </td>
                </tr>
            
            
            <tr>
                <td><div class="form-horizontal ">
                    @Html.LabelFor(model => model.gender, "Gender", htmlAttributes: new { @class = "control-label col-md-3" })
                    </div></td>
                <td><div class="form-inline">
                        <select class ="form-control" id="gender" name="gender">
                            <option value="M">M</option>
                            <option value="F">F</option>
                        </select>
                    </div>
               </td>
                <td><div class="form-horizontal">
                    @Html.LabelFor(model => model.phoneNo, "Phone Number", htmlAttributes: new { @class = "control-label col-md-3" })
                    </div></td><td><div class="form-group">
                        @Html.EditorFor(model => model.phoneNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.phoneNo, "", new { @class = "text-danger" })
                    </div>
                </td>
                </tr></table>
            <hr />
            <table style="width:45%;"><tr>
                <td><div class="form-horizontal">
                    @Html.LabelFor(model => model.email, "Email", htmlAttributes: new { @class = "control-label col-md-1" })
                    </div></td>
                <td><div class="form-inline">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </td></tr></table>
                <hr />

            <table style="width:34%;"><tr>
                <td><div class="form-horizontal"style="white-space:nowrap">
                    @Html.LabelFor(model => model.userName, "User Name", htmlAttributes: new { @class = "control-label col-md-1" })
                    </div></td>
                <td><div class="form-inline">
                        @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                    </div>
                </td>
            </tr></table>
                <hr />



                <table style="width:70%;"><tr>
                    <td><div class="form-horizontal">
                        @Html.LabelFor(model => model.designation, "Designation", htmlAttributes: new { @class = "control-label col-md-4" })
                        </div></td>
                    <td><div class="form-inline">
                            @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
                        </div>
                  </td>

                    <td><div class="form-horizontal"style="white-space:nowrap">
                        @Html.LabelFor(model => model.deptName, "Department Name", htmlAttributes: new { @class = "control-label col-md-4" })
                        </div></td>
                    <td><div class="form-inline">
                            @Html.DropDownListFor(model => model.deptId, new SelectList(Model.departmentList, "Key", "Value"), "- Select Department -", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.deptId, "", new { @class = "text-danger" })
                        </div>
                   </td>
                </tr></table>
                
            <hr />
            <table style="width:70%;">
            <tr>
                <td><div class="form-horizontal"style="white-space:nowrap">
                    @Html.LabelFor(model => model.empStartDate, "Employment Start Date", htmlAttributes: new { @class = "control-label col-md-1", type = "Date" })
                    </div></td>
                <td><div class="form-inline">
                        @Html.TextBoxFor(model => model.empStartDate, new { type = "date" })
                        @Html.ValidationMessageFor(model => model.empStartDate, "", new { @class = "text-danger" })
                    </div>
                </td>

                <td>
                    <div class="form-horizontal" style="white-space:nowrap">
                        @Html.LabelFor(model => model.isAdmin, "Administrator Role", htmlAttributes: new { @class = "control-label col-md-1" })
                    </div>
                </td>
                <td>
                    <div class="form-inline">
                        @Html.CheckBoxFor(model => model.isAdmin)
                        @Html.ValidationMessageFor(model => model.isAdmin, "", new { @class = "text-danger" })
                    </div>
                </td>

                </tr></table>
            <hr />
            <table style="width:70%;"><tr>
                
                <td>
                    <div class="form-horizontal" style="white-space:nowrap">
                        @Html.LabelFor(model => model.staffType, "Staff Type", htmlAttributes: new { @class = "control-label col-md-1" })
                    </div>
                </td>
                <td>
                    <div class="form-inline">
                        @Html.DropDownListFor(model => model.staffType, new SelectList(Model.staffTypeSelectionOptions, "Key", "Value"), "- Select type -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.staffType, "", new { @class = "text-danger" })
                    </div>
                </td>
                <td><div class="form-horizontal"style="white-space:nowrap">
                    @Html.LabelFor(model => model.optionalStaffType, "Optional Staff Type", htmlAttributes: new { @class = "control-label col-md-4" })
                    </div></td>
                        <td><div class="form-inline">
                        @Html.DropDownListFor(model => model.optionalStaffType, new SelectList(Model.staffTypeSelectionOptions, "Key", "Value"), "- Select type -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.optionalStaffType, "", new { @class = "text-danger" })
                    </div>
                </td>

                  

                    <td><div class="form-horizontal"style="white-space:nowrap">
                        @Html.LabelFor(model => model.optional2ndStaffType, "Optional Staff Type 2", htmlAttributes: new { @class = "control-label col-md-4" })
                        </div></td>
                        <td><div class="form-inline">
                            @Html.DropDownListFor(model => model.optional2ndStaffType, new SelectList(ViewBag.staffType))
                            @Html.ValidationMessageFor(model => model.optional2ndStaffType, "", new { @class = "text-danger" })
                        </div>
                    </td>
                </tr></table>
            <hr />
            <table style="width:70%;"><tr>
                <td><div class="form-horizontal"style="white-space:nowrap">
                    @Html.LabelFor(model => model.secondLineManager, "Optional Second Line Manager", htmlAttributes: new { @class = "control-label col-md-3" })
                    </div></td>
                <td><div class="form-inline">
                        @Html.DropDownListFor(model => model.secondLineManager, new SelectList(Model.SecondLMSelectionOptions, "Key", "Value"), "- Secondary Line Manager -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.secondLineManager, "", new { @class = "text-danger" })
                    </div>
                </td></tr></table>
            <hr />
                <div class="form-group">
                    <div class="col-md-offset-3 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-default" />
                    </div>
                </div>
            </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function ()
        {
            var $this = $("#isAdmin");

            if ($this.is(':checked'))
            {
                $('#staffType').attr("disabled", "disabled")
                $('#optionalStaffType').attr("disabled", "disabled")
            }
        });
        $('#isAdmin').click(function ()
        {
            var $this = $(this);

            if ($this.is(':unchecked'))
            {
                $('#staffType').removeAttr("disabled");
                $('#optionalStaffType').removeAttr("disabled");
            }
            else
            {
                $('#staffType').attr("disabled", "disabled")
                $('#optionalStaffType').attr("disabled", "disabled")
            }
        });
    </script>
}
